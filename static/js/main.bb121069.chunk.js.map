{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/PageNav/PageNav.tsx","App.tsx","components/Loader/Loader.tsx","api.ts","components/PageLink/PageLink.tsx","components/PageTable/PageTable.tsx","components/PagePeople/PagePeople.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navigate","role","App","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PageLink","people","person","isSelected","mother","find","user","name","motherName","father","fatherName","slug","sex","born","died","PageTable","selectedSlug","map","PagePeople","useState","setPeople","isLoading","setIsLoading","isLoaded","setIsLoaded","hasError","setHasError","personSlug","useParams","useEffect","res","catch","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"uOAQaA,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjD,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OACTC,IAAW,cACT,CAAE,8BAA+BD,GAF1B,EAFb,SAOGF,GAGN,EClBYI,EAAW,kBACtB,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,SAASC,KAAK,iBAVd,ECCXM,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAML,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANW,E,cCDNM,G,MAAS,kBACpB,qBAAKN,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCOf,SAASO,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCJM,IAAMQ,EAA4B,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACpDC,EAASH,EAAOI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAASL,EAAOM,UAAzB,IACzBC,EAASR,EAAOI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAASL,EAAOQ,UAAzB,IAE/B,OACE,qBACE,UAAQ,SACR1B,UAAWE,IACT,CAAE,yBAA0BiB,EAAWD,KAH3C,UAME,6BACE,cAAC,IAAD,CACEpB,GAAE,aAAQoB,EAAOS,MACjB3B,UAAWE,IACT,CAAE,kBAAkC,MAAfgB,EAAOU,MAHhC,SAMGV,EAAOK,SAIZ,6BAAKL,EAAOU,MACZ,6BAAKV,EAAOW,OACZ,6BAAKX,EAAOY,OAEZ,6BACGV,EAEG,cAAC,IAAD,CACEpB,UAAWE,IACT,CAAE,kBAAkC,MAAfkB,EAAOQ,MAE9B9B,GAAE,aAAQsB,EAAOO,MAJnB,SAMGT,EAAOM,aAIV,4BACGN,EAAOM,YAAc,QAK9B,6BACGC,EAEG,cAAC,IAAD,CACEzB,UAAWE,IACT,CAAE,kBAAkC,MAAfuB,EAAOG,MAE9B9B,GAAE,aAAQ2B,EAAOE,MAJnB,SAMGT,EAAOQ,YAAc,MAGxBR,EAAOQ,YAAc,QAKhC,EChEYK,EAA4B,SAAC,GAA8B,IAA5Bd,EAA2B,EAA3BA,OAAQe,EAAmB,EAAnBA,aAC5Cb,EAAa,SAACD,GAAD,OAAoBA,EAAOS,OAASK,CAApC,EAEnB,OACE,wBACE,UAAQ,cACRhC,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGiB,EAAOgB,KAAI,SAAAf,GAAM,OAChB,cAAC,EAAD,CACED,OAAQA,EACRC,OAAQA,EACRC,WAAYA,GACPD,EAAOS,KALE,QAWzB,EChCYO,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOlB,EAAP,KAAemB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACQC,EAAeC,cAAfD,WAeR,OAbAE,qBAAU,WACRtC,IACGK,MAAK,SAAAkC,GACJV,EAAUU,GACVR,GAAa,GACbE,GAAY,EACb,IACAO,OAAM,WACLL,GAAY,GACZJ,GAAa,EACd,GACJ,GAAE,IAGD,qCACE,oBAAItC,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGqC,GACI,cAAC,EAAD,IACJI,GAEG,mBAAG,UAAQ,qBAAqBzC,UAAU,kBAA1C,kCAKe,IAAlBiB,EAAO+B,SAAiBP,GAAYF,GAEjC,mBAAG,UAAQ,kBAAkBvC,UAAU,kBAAvC,uBAIHuC,GAAYtB,EAAO+B,OAAS,GAEzB,cAAC,EAAD,CAAW/B,OAAQA,EAAQe,aAAcW,WAMtD,EC5CDM,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,oBAAItD,UAAU,QAAd,8BACzB,cAAC,IAAD,CAAOuD,OAAK,EAACD,QAAS,oBAAItD,UAAU,QAAd,yBACtB,cAAC,IAAD,CAAOqD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUxD,GAAG,IAAI0D,SAAO,MACpD,eAAC,IAAD,CAAOH,KAAK,UAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,gB","file":"static/js/main.bb121069.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => (\n        classNames('navbar-item',\n          { 'has-background-grey-lighter': isActive })\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navigate = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport { Navigate } from './components/PageNav';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigate />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[],\n  person: Person,\n  isSelected: (person: Person) => boolean,\n};\n\nexport const PageLink: React.FC<Props> = ({ people, person, isSelected }) => {\n  const mother = people.find(user => user.name === person.motherName);\n  const father = people.find(user => user.name === person.fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': isSelected(person) },\n      )}\n    >\n      <td>\n        <Link\n          to={`../${person.slug}`}\n          className={classNames(\n            { 'has-text-danger': person.sex === 'f' },\n          )}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {mother\n          ? (\n            <Link\n              className={classNames(\n                { 'has-text-danger': mother.sex === 'f' },\n              )}\n              to={`../${mother.slug}`}\n            >\n              {person.motherName}\n            </Link>\n          )\n          : (\n            <p>\n              {person.motherName || '-'}\n            </p>\n          )}\n      </td>\n\n      <td>\n        {father\n          ? (\n            <Link\n              className={classNames(\n                { 'has-text-danger': father.sex === 'f' },\n              )}\n              to={`../${father.slug}`}\n            >\n              {person.fatherName || '-'}\n            </Link>\n          )\n          : person.fatherName || '-'}\n\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PageLink } from '../PageLink';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string | undefined,\n};\n\nexport const PageTable:React.FC<Props> = ({ people, selectedSlug }) => {\n  const isSelected = (person: Person) => person.slug === selectedSlug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PageLink\n            people={people}\n            person={person}\n            isSelected={isSelected}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PageTable } from '../PageTable';\n\nexport const PagePeople = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const { personSlug } = useParams();\n\n  useEffect(() => {\n    getPeople()\n      .then(res => {\n        setPeople(res);\n        setIsLoading(false);\n        setIsLoaded(true);\n      })\n      .catch(() => {\n        setHasError(true);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            && <Loader />}\n          {hasError\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n          {people.length === 0 && !hasError && isLoaded\n            && (\n              <p data-cy=\"noPeopleMessage\" className=\"has-text-danger\">\n                no people\n              </p>\n            )}\n          {isLoaded && people.length > 0\n            && (\n              <PageTable people={people} selectedSlug={personSlug} />\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PagePeople } from './components/PagePeople';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route index element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people/\">\n            <Route index element={<PagePeople />} />\n            <Route path=\":personSlug\" element={<PagePeople />} />\n          </Route>\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}